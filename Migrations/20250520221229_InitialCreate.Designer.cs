// <auto-generated />
using System;
using Eksamen2025Gruppe5.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eksamen2025Gruppe5.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250520221229_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Eksamen2025Gruppe5.Models.ColorInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Blue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Green")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Red")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ColorInfos");
                });

            modelBuilder.Entity("Eksamen2025Gruppe5.Models.DateInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("PollenResponseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PollenResponseId");

                    b.ToTable("DateInfos");
                });

            modelBuilder.Entity("Eksamen2025Gruppe5.Models.IndexInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColorInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DateInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ColorInfoId");

                    b.HasIndex("DateInfoId");

                    b.ToTable("IndexInfos");
                });

            modelBuilder.Entity("Eksamen2025Gruppe5.Models.PollenRegistrering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Dato")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nivå")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Område")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PollenRegistreringer");
                });

            modelBuilder.Entity("Eksamen2025Gruppe5.Models.PollenResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PollenResponses");
                });

            modelBuilder.Entity("Eksamen2025Gruppe5.Models.DateInfo", b =>
                {
                    b.HasOne("Eksamen2025Gruppe5.Models.PollenResponse", "PollenResponse")
                        .WithMany("Dates")
                        .HasForeignKey("PollenResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PollenResponse");
                });

            modelBuilder.Entity("Eksamen2025Gruppe5.Models.IndexInfo", b =>
                {
                    b.HasOne("Eksamen2025Gruppe5.Models.ColorInfo", "ColorInfo")
                        .WithMany()
                        .HasForeignKey("ColorInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eksamen2025Gruppe5.Models.DateInfo", "DateInfo")
                        .WithMany("Indexes")
                        .HasForeignKey("DateInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColorInfo");

                    b.Navigation("DateInfo");
                });

            modelBuilder.Entity("Eksamen2025Gruppe5.Models.DateInfo", b =>
                {
                    b.Navigation("Indexes");
                });

            modelBuilder.Entity("Eksamen2025Gruppe5.Models.PollenResponse", b =>
                {
                    b.Navigation("Dates");
                });
#pragma warning restore 612, 618
        }
    }
}
